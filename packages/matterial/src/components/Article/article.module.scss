@use '../../styles/breakpoint' as *;
@use '../../styles/theme' as *;
@use '../../styles/extensions' as *;

%p {
  display: block;
  margin-block-start: 1em;
  margin-block-end: 1em;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
}

// <article>
.root {
  counter-reset: article;

  & + article {
    margin-top: 3em;
  }

  > header {
    time {
      font-size: 0.8em;
      opacity: 0.65;
    }
    h2 {
      margin-top: 0.1em;
    }
  }

  p {
    @extend %p;
  }

  figcaption::before {
    counter-increment: article;
    content: 'Figure ' counter(article, decimal-leading-zero) '. ';
    font-weight: bold;
  }

  blockquote:not([class~='unstyled']) {
    padding: 0 0 0 5%;
    position: relative;
    &:before {
      display: block;
      position: absolute;
      left: -0.065em;
      top: -0.2em;
      content: '\201C';
      font-size: 5em;
      font-family: Georgia;
      color: #7a7a7a;
      line-height: 1;
    }
    p {
      font-size: 1.4em;
      font-style: italic;
      font-family: serif;
      letter-spacing: -0.015em;
    }
    footer {
      color: #777;
      font-size: 1.2em;
      margin-top: -0.5em;
    }
    footer:before {
      content: '\2014 \00A0';
    }
  }

  pre {
    padding: 1em 5%;
    overflow: auto;
    background: $color-surface-light;
    counter-reset: linenumbers;
    line-height: 1;
    @include theme(dark) {
      background: $color-surface-dark;
    }
  }

  dl dd,
  dl dt {
    margin-top: 0.4em;
  }

  section + section {
    margin-top: 2em;
  }

  table {
    th,
    td {
      border-width: 1px;
      border-style: solid;
      padding: 0.2em 0.5em;
    }
  }

  :global {
    /*!
        * StackOverflow.com light style
        *
        * @stackoverflow/stacks v0.56.0
        * https://github.com/StackExchange/Stacks
        */
    .hljs {
      display: block;
      overflow-x: auto;
      padding: 0.5em;
    }

    .hljs-comment {
      color: #656e77;
    }

    .hljs-keyword,
    .hljs-selector-tag,
    .hljs-meta-keyword,
    .hljs-doctag,
    .hljs-section,
    .hljs-selector-class,
    .hljs-meta,
    .hljs-selector-pseudo,
    .hljs-attr {
      color: $darkblue;
    }

    .hljs-attribute {
      color: #803378;
    }

    .hljs-name,
    .hljs-type,
    .hljs-number,
    .hljs-selector-id,
    .hljs-quote,
    .hljs-template-tag,
    .hljs-built_in,
    .hljs-title,
    .hljs-literal {
      color: #b75501;
    }

    .hljs-string,
    .hljs-regexp,
    .hljs-symbol,
    .hljs-variable,
    .hljs-template-variable,
    .hljs-link,
    .hljs-selector-attr,
    .hljs-meta-string {
      color: #54790d;
    }

    .hljs-bullet,
    .hljs-code {
      color: #535a60;
    }

    .hljs-deletion {
      color: #c02d2e;
    }

    .hljs-addition {
      color: #2f6f44;
    }

    .hljs-emphasis {
      font-style: italic;
    }

    .hljs-strong {
      font-weight: bold;
    }

    @include theme(dark) {
      /*!
            * StackOverflow.com dark style
            *
            * @stackoverflow/stacks v0.56.0
            * https://github.com/StackExchange/Stacks
            */
      .hljs-comment {
        color: #999999;
      }

      .hljs-keyword,
      .hljs-selector-tag,
      .hljs-meta-keyword,
      .hljs-doctag,
      .hljs-section,
      .hljs-selector-class,
      .hljs-meta,
      .hljs-selector-pseudo,
      .hljs-attr {
        color: #88aece;
      }

      .hljs-attribute {
        color: $darkpink;
      }

      .hljs-name,
      .hljs-type,
      .hljs-number,
      .hljs-selector-id,
      .hljs-quote,
      .hljs-template-tag,
      .hljs-built_in,
      .hljs-title,
      .hljs-literal {
        color: #f08d49;
      }

      .hljs-string,
      .hljs-regexp,
      .hljs-symbol,
      .hljs-variable,
      .hljs-template-variable,
      .hljs-link,
      .hljs-selector-attr,
      .hljs-meta-string {
        color: #b5bd68;
      }

      .hljs-bullet,
      .hljs-code {
        color: #cccccc;
      }

      .hljs-deletion {
        color: #de7176;
      }

      .hljs-addition {
        color: #76c490;
      }
    }
  }
}

.description,
.preface {
  @extend %p;
}

.preface {
  @extend %surface;

  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;

    li + li {
      margin-top: 0.75em;
    }

    @include breakpoint(screen) {
      display: flex;

      li + li {
        margin: 0 0 0 0.75em;
        padding: 0 0 0 0.75em;
        border-left: 2px solid rgba(0, 0, 0, 0.15);
      }
    }
  }
}

.next {
  display: flex;
  justify-content: flex-end;

  a {
    text-decoration: none !important;
    padding: 0.5em 0;
    margin: 0.5em 0;

    small {
      display: block;
    }

    big {
      display: flex;
      align-items: center;
    }

    [class~='arrow'] {
      width: 1.5em;
      height: 1.5em;
      transition: transform 0.2s ease;
    }

    &:hover {
      [class~='arrow'] {
        transform: translateX(10px) scale(1.2);
      }
    }
  }
}
